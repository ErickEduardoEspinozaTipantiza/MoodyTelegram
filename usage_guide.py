#!/usr/bin/env python3
"""
Gu√≠a de uso del sistema de an√°lisis de emociones integrado en el bot
"""

import os
from pathlib import Path

def show_usage_guide():
    """Muestra la gu√≠a de uso del sistema"""
    
    print("ü§ñ SISTEMA DE AN√ÅLISIS DE EMOCIONES - BOT MOODY")
    print("=" * 60)
    
    print("\nüìä RESUMEN DEL SISTEMA:")
    print("  ‚Ä¢ Modelo principal: SVM (81.5% precisi√≥n)")
    print("  ‚Ä¢ Modelo secundario: CNN (62.3% precisi√≥n)")
    print("  ‚Ä¢ Emociones detectadas: anger, disgust, fear, happiness, neutral, sadness")
    print("  ‚Ä¢ Caracter√≠sticas extra√≠das: 318 ‚Üí 76 (despu√©s de PCA)")
    print("  ‚Ä¢ Dataset: MESD (Mexican Emotional Speech Database)")
    print("  ‚Ä¢ Muestras de entrenamiento: 603")
    print("  ‚Ä¢ Muestras de prueba: 130")
    
    print("\nüéØ C√ìMO USAR EL BOT:")
    print("  1. Inicia el bot: python main.py")
    print("  2. En Telegram, busca tu bot y env√≠a /start")
    print("  3. Selecciona 'Grabar mensaje de voz'")
    print("  4. Graba tu mensaje de voz con emoci√≥n")
    print("  5. El bot analizar√° tu emoci√≥n autom√°ticamente")
    print("  6. Recibir√°s un informe con:")
    print("     ‚Ä¢ Emoci√≥n detectada")
    print("     ‚Ä¢ Nivel de confianza")
    print("     ‚Ä¢ Recomendaciones terap√©uticas")
    print("     ‚Ä¢ Contacto del especialista")
    
    print("\nüîß COMPONENTES DEL SISTEMA:")
    print("  üìÅ Modelos entrenados:")
    print("     ‚Ä¢ models/modelo_svm.pkl")
    print("     ‚Ä¢ models/modelo_cnn.h5")
    print("     ‚Ä¢ models/scaler.pkl")
    print("     ‚Ä¢ models/pca.pkl")
    print("     ‚Ä¢ models/label_encoder.pkl")
    
    print("\n  üìù C√≥digo principal:")
    print("     ‚Ä¢ services/emotion_analyzer.py - An√°lisis de emociones")
    print("     ‚Ä¢ handlers/voice_handler.py - Manejo de mensajes de voz")
    print("     ‚Ä¢ handlers/therapy_handler.py - Terapia personalizada")
    print("     ‚Ä¢ config/settings.py - Configuraci√≥n")
    
    print("\nüé≠ EMOCIONES DETECTADAS:")
    emotions = {
        "anger": "Ira - Se√±ales de frustraci√≥n o enfado",
        "disgust": "Disgusto - Rechazo o aversi√≥n",
        "fear": "Miedo - Ansiedad o temor",
        "happiness": "Felicidad - Alegr√≠a y bienestar",
        "neutral": "Neutral - Estado emocional estable",
        "sadness": "Tristeza - Melancol√≠a o abatimiento"
    }
    
    for emotion, description in emotions.items():
        print(f"     ‚Ä¢ {emotion}: {description}")
    
    print("\nüìà PRECISI√ìN POR EMOCI√ìN (Modelo SVM):")
    print("     ‚Ä¢ anger: 89% precisi√≥n")
    print("     ‚Ä¢ disgust: 80% precisi√≥n") 
    print("     ‚Ä¢ fear: 90% precisi√≥n")
    print("     ‚Ä¢ happiness: 82% precisi√≥n")
    print("     ‚Ä¢ neutral: 89% precisi√≥n")
    print("     ‚Ä¢ sadness: 67% precisi√≥n")
    
    print("\n‚öôÔ∏è CARACTER√çSTICAS T√âCNICAS:")
    print("     ‚Ä¢ Frecuencia de muestreo: 22kHz")
    print("     ‚Ä¢ Caracter√≠sticas MFCC: 13 coeficientes")
    print("     ‚Ä¢ Caracter√≠sticas Chroma: 12 coeficientes")
    print("     ‚Ä¢ Mel Spectrogram: 128 bandas")
    print("     ‚Ä¢ Caracter√≠sticas temporales: ZCR, RMS, Pitch")
    print("     ‚Ä¢ Caracter√≠sticas espectrales: Centroide, Rolloff")
    
    print("\nüöÄ PR√ìXIMAS MEJORAS:")
    print("     ‚Ä¢ Entrenamiento con m√°s datos")
    print("     ‚Ä¢ Detecci√≥n de emociones mixtas")
    print("     ‚Ä¢ An√°lisis temporal de emociones")
    print("     ‚Ä¢ Personalizaci√≥n por usuario")
    
    print("\nüìû SOPORTE:")
    print("     ‚Ä¢ Email: crisgeopro2003@gmail.com")
    print("     ‚Ä¢ Logs: Revisa la consola para diagn√≥sticos")
    print("     ‚Ä¢ Test: python test_emotion_model.py")
    
    print("\n‚úÖ SISTEMA LISTO PARA USAR!")
    print("   El bot ya puede analizar emociones en tiempo real.")

if __name__ == "__main__":
    show_usage_guide()
